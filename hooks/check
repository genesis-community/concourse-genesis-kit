#!/bin/bash

# Cloud Config checks
if [[ -n "${GENESIS_CLOUD_CONFIG}" ]] ; then
  if want_feature "ocfp" ; then
    _env_scale="$(lookup --merged meta.ocfp.env.scale)"
    _vm_type="concourse-${_env_scale}"
    _network="${GENESIS_ENVIRONMENT}-concourse"
    _disk_type="concourse-${_env_scale}"
    _worker_vm_type="concourse-worker-${_env_scale}"
    #_web_vm_type="concourse-web-${_env_scale}"
    #_db_vm_type="concourse-db-${_env_scale}"
    #_haproxy_vm_type="concourse-haproxy-${_env_scale}"
  else # Legacy was hard coded
    _vm_type="small"
    _network="concourse"
    _disk_type="concourse"
    _worker_vm_type="concourse-worker"
  fi

  if ! want_feature "proto"; then
    cloud_config_needs network      "$(lookup params.concourse_network   ${_network})"
    cloud_config_needs vm_type      "$(lookup params.worker_vm_type      ${_worker_vm_type})"

    if ! want_feature "workers"; then
      # without the 'workers' feature, this is a FULL concourse
      cloud_config_needs vm_type    "$(lookup params.concourse_vm_type   ${_vm_type})"
      cloud_config_needs disk_type  "$(lookup params.concourse_disk_type ${_disk_type})"

      if lookup --defined params.web_vm_type ; then
        cloud_config_needs vm_type  "$(lookup params.web_vm_type)"
      fi
      if lookup --defined params.db_vm_type ; then
        cloud_config_needs vm_type  "$(lookup params.db_vm_type)"
      fi
      if lookup --defined params.haproxy_vm_type ; then
        cloud_config_needs vm_type  "$(lookup params.haproxy_vm_type)"
      fi
    fi

    if check_cloud_config ; then
      describe "  cloud-config [#G{OK}]"
    else
      describe "  cloud-config [#R{FAILED}]"
      exit 1
    fi

  fi
fi
