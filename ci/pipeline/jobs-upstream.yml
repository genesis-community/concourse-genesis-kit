jobs:
- name: bpm-release
  public: true
  serial: true
  serial_groups: [bosh-release]
  plan:
    - do:
      - in_parallel:
        - { get: git, trigger: false, passed: [spec-tests] }
        - { get: git-ci, trigger: false }
        - get: bosh-release-bpm
          trigger: true
          params:
            tarball: false
      - task: update-bosh-release
        file: git-ci/ci/tasks/update-bosh-release/task.yml
        input_mapping:
          bosh-release: bosh-release-bpm
        params:
          OPS_FILE_PATH: manifests/releases/bpm.yml
          RELEASE_NAME: bpm
          BRANCH: (( grab meta.github.branch ))
      - put: git
        params:
          merge: true
          repository: pushme

- name: concourse-release
  public: true
  serial: true
  serial_groups: [bosh-release]
  plan:
    - do:
      - in_parallel:
        - { get: git, trigger: false, passed: [spec-tests] }
        - { get: git-ci, trigger: false }
        - get: bosh-release-concourse
          trigger: true
          params:
            tarball: false
      - task: update-bosh-release
        file: git-ci/ci/tasks/update-bosh-release/task.yml
        input_mapping:
          bosh-release: bosh-release-concourse
        params:
          OPS_FILE_PATH: manifests/releases/concourse.yml
          RELEASE_NAME: concourse
          BRANCH: (( grab meta.github.branch ))
      - put: git
        params:
          merge: true
          repository: pushme

- name: haproxy-release
  public: true
  serial: true
  serial_groups: [bosh-release]
  plan:
    - do:
      - in_parallel:
        - { get: git, trigger: false, passed: [spec-tests] }
        - { get: git-ci, trigger: false }
        - get: bosh-release-haproxy
          trigger: true
          params:
            tarball: false
      - task: update-bosh-release
        file: git-ci/ci/tasks/update-bosh-release/task.yml
        input_mapping:
          bosh-release: bosh-release-haproxy
        params:
          OPS_FILE_PATH: manifests/releases/haproxy.yml
          RELEASE_NAME: haproxy
          BRANCH: (( grab meta.github.branch ))
      - put: git
        params:
          merge: true
          repository: pushme

- name: postgres-release
  public: true
  serial: true
  serial_groups: [bosh-release]
  plan:
    - do:
      - in_parallel:
        - { get: git, trigger: false, passed: [spec-tests] }
        - { get: git-ci, trigger: false }
        - get: bosh-release-postgres
          trigger: true
          params:
            tarball: false
      - task: update-bosh-release
        file: git-ci/ci/tasks/update-bosh-release/task.yml
        input_mapping:
          bosh-release: bosh-release-postgres
        params:
          OPS_FILE_PATH: manifests/releases/postgres.yml
          RELEASE_NAME: postgres
          BRANCH: (( grab meta.github.branch ))
      - put: git
        params:
          merge: true
          repository: pushme

- name: slack-notifications-release
  public: true
  serial: true
  serial_groups: [bosh-release]
  plan:
    - do:
      - in_parallel:
        - { get: git, trigger: false, passed: [spec-tests] }
        - { get: git-ci, trigger: false }
        - get: bosh-release-slack-notifications
          trigger: true
          params:
            tarball: false
      - task: update-bosh-release
        file: git-ci/ci/tasks/update-bosh-release/task.yml
        input_mapping:
          bosh-release: bosh-release-slack-notifications
        params:
          OPS_FILE_PATH: manifests/releases/slack-notifications.yml
          RELEASE_NAME: slack-notifications
          BRANCH: (( grab meta.github.branch ))
      - put: git
        params:
          merge: true
          repository: pushme