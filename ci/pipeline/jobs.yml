jobs:
- name: spec-tests
  public: true
  serial: true
  serial_groups: [genesis-ci]
  plan:
  - do:
    - in_parallel:
      - { get: git, trigger: true }
      - { get: git-ci }
    - task: spec-testing
      file: git-ci/ci/tasks/spec-tests/task.yml
      attempts: 2
    on_success:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: tests job '$BUILD_JOB_NAME' succeeded.
        ok:      yes
        link:    (( grab meta.shout.links.build ))             
    on_failure:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: tests job '$BUILD_JOB_NAME' failed.
        ok:      no
        link:    (( grab meta.shout.links.build ))

- name: spec-check
  public: true
  serial: true
  serial_groups: [genesis-ci]
  plan:
  - do:
    - in_parallel:
      - { get: git, trigger: true }
      - { get: git-ci }
      - { get: git-latest-tag }
    - task: spec-testing
      file: git-ci/ci/tasks/spec-check/task.yml
    on_success:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: tests job '$BUILD_JOB_NAME' succeeded.
        ok:      yes
        link:    (( grab meta.shout.links.build ))             
    on_failure:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: tests job '$BUILD_JOB_NAME' failed.
        ok:      no
        link:    (( grab meta.shout.links.build ))
        
- name: testflight
  public: true
  serial: true
  serial_groups: [genesis-ci]
  plan:
  - do:
    - in_parallel:
      - { get: git, trigger: true,  passed: [spec-tests] }
      - { get: git-ci }
    - task: testflights
      file: git-ci/ci/tasks/test-flight/task.yml
      params:
        GENESIS_HONOR_ENV:    1
        GIT_NAME:             (( grab meta.git.name ))
        GIT_EMAIL:            (( grab meta.git.email ))
        VAULT_URI:            (( grab meta.vault.url ))
        VAULT_TOKEN:          (( grab meta.vault.token ))
        KIT_SHORTNAME:        (( grab meta.kit ))
        BOSH_ENVIRONMENT:     (( grab meta.bosh.uri ))
        BOSH_CA_CERT:         (( grab meta.bosh.cacert ))
        BOSH_CLIENT:          (( grab meta.bosh.username ))
        BOSH_CLIENT_SECRET:   (( grab meta.bosh.password ))
    on_success:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: tests job '$BUILD_JOB_NAME' succeeded.
        ok:      yes
        link:    (( grab meta.shout.links.build ))
    on_failure:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: tests job '$BUILD_JOB_NAME' failed.
        ok:      no
        link:    (( grab meta.shout.links.build ))

- name: pre
  public: true
  serial: true
  plan:
  - do:
    - in_parallel:
      - { get: git,     trigger: true,  passed: [testflight] }
      - { get: version, trigger: true }
    - task: release-notes
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: (( grab meta.image.name ))
            tag:        (( grab meta.image.tag ))
        inputs:
            - { name: git }
        run:
          path: sh
          args:
          - -ce
          - |
            cd git
            if [ -f ci/release_notes.md ]; then
              echo "######   RELEASE NOTES   ###############"
              echo
              cat ci/release_notes.md
              echo
              echo "########################################"
              echo
            else
              echo "NO RELEASE NOTES HAVE BEEN WRITTEN"
              echo "You *might* want to do that before"
              echo "hitting (+) on that shipit job..."
              echo
            fi
    on_success:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: release candidate job 'pre' succeeded.
        ok:      yes
        link:    (( grab meta.shout.links.build ))
    on_failure:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: release candidate job 'pre' failed (which is unusual).
        ok:      no
        link:    (( grab meta.shout.links.build ))

- name: rc
  public: true
  serial: true
  plan:
  - do:
    - in_parallel:
      - { get: git,     trigger: true,  passed: [pre] }
      - { get: version, trigger: false, passed: [pre], params: {pre: rc} }
    - put: version
      params: {file: version/number}
    on_success:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: release candidate job 'rc' succeeded.
        ok:      yes
        link:    (( grab meta.shout.links.build ))
    on_failure:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: release candidate job 'rc' failed (which is unusual).
        ok:      no
        link:    (( grab meta.shout.links.build ))

- name: minor
  public: true
  plan:
  - do:
    - { get: version, trigger: false, params: {bump: minor} }
    - { put: version,                 params: {file: version/number} }
    on_success:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: minor version bump job 'minor' succeeded.
        ok:      yes
        link:    (( grab meta.shout.links.build ))
    on_failure:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: minor version bump job 'minor' failed (which is unusual).
        ok:      no
        link:    (( grab meta.shout.links.build ))

- name: major
  public: true
  plan:
  - do:
    - { get: version, trigger: false, params: {bump: major} }
    - { put: version,                 params: {file: version/number} }
    on_success:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: major version bump job '$BUILD_JOB_NAME' succeeded.
        ok:      no
        link:    (( grab meta.shout.links.build ))
    on_failure:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: major version bump job '$BUILD_JOB_NAME' failed (which is unusual).
        ok:      no
        link:    (( grab meta.shout.links.build ))

- name: shipit
  public: true
  serial: true
  plan:
  - do:
    - in_parallel:
      - { get: version, resource: version, passed: [rc], params: {bump: final} }
      - { get: git,     passed: [rc] }
      - { get: git-ci }
      - { get: git-latest-tag }
    - task: generate-release-notes
      file: git-ci/ci/tasks/generate-release-notes/task.yml
    - task: release
      file: git-ci/ci/tasks/shipit/task.yml
      params:
        REPO_ROOT:    git
        VERSION_FROM: version/number
        RELEASE_ROOT: gh
        NOTIFICATION_OUT: notifications
        BRANCH:        (( grab meta.github.branch ))
        GITHUB_OWNER:  (( grab meta.github.owner ))
        GIT_EMAIL:     (( grab meta.git.email ))
        GIT_NAME:      (( grab meta.git.name ))
        KIT_SHORTNAME: (( grab meta.kit ))
    - put: git
      params:
        merge: true
        repository: pushme
    - put: github
      params:
        name:   gh/name
        tag:    gh/tag
        body:   release-notes/notes.md
        globs: [gh/artifacts/*]
    - put: version
      params:
        bump: patch
    - in_parallel:
        steps:
          - put: notify
            params:
              method: announce
              file: notifications/message
              link: (( concat meta.github.uri "/releases" ))
    on_success:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: release job '$BUILD_JOB_NAME' succeeded.
        ok:      yes
        link:    (( grab meta.shout.links.build ))
    on_failure:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: release job '$BUILD_JOB_NAME' failed.
        ok:      no
        link:    (( grab meta.shout.links.build ))