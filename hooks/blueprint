#!/bin/bash
set -eu

declare -a merge
merge=( "manifests/concourse/base.yml" )
merge+=( "manifests/concourse/releases.yml")
merge+=( "manifests/concourse/jobs.yml")

validate_features \
  azure shield                                  \
  workers full small-footprint                  \
  no-tls provided-cert self-signed-cert         \
  github-oauth github-enterprise-oauth cf-oauth \
  vault vault-approle shout prometheus          \
  no-haproxy dynamic-web-ip external-db         \
  external-db-ca

if [[ "$(bosh_cpi)" == "azure" ]]; then
  merge+=( "manifests/addons/azure.yml" )
fi

# Make sure we're only merging one of the major feature flags
declare -i maj_feat=0
if want_feature "full" ; then
  (( maj_feat+=1 ))
fi
if want_feature "workers" ; then
  (( maj_feat+=1 ))
fi
if want_feature "small-footprint" ; then
  (( maj_feat+=1 ))
fi

if [[ $maj_feat != 1 ]]; then
    echo >&2 "Can only have one of 'full', workers', or 'small-footprint' as a feature."
    exit 1
fi



if want_feature "full" || want_feature "small-footprint"; then
  if want_feature "full" ; then
    merge+=( "manifests/concourse/full.yml" )
  fi
  if want_feature "small-footprint" ; then
    merge+=( "manifests/concourse/small-footprint.yml" )
  fi
  for oauth in "github-oauth" "cf-oauth" ; do
    if want_feature "$oauth" ; then
      merge+=( "manifests/oauth/${oauth}.yml" )
    fi
  done

  if want_feature "github-enterprise-oauth"; then
    # github enterprise oauth just adds the host param to github oauth
    if ! want_feature "github-oauth"; then
      merge+=( "manifests/oauth/github-oauth.yml" )
    fi
    merge+=( "manifests/oauth/github-enterprise-oauth.yml" )
  fi

  if ! want_feature no-tls ; then
    merge+=( "manifests/concourse/tls.yml" )
    if want_feature self-signed-cert ; then
      merge+=( "manifests/addons/self-signed.yml" )
    elif ! want_feature provided-cert ; then
      echo >&2 "Concourse needs to be configured with 'no-tls', 'provided-cert' or"
      echo >&2 "'self-signed-cert'."
      echo >&2
      echo >&2 "If upgrading, please add 'self-signed-cert' to your environment's list of"
      echo >&2 "features and run 'genesis add-secrets' to generate the certificate."
      echo >&2
      exit 1
    fi
  fi

  if want_feature "no-haproxy" && ! want_feature "small-footprint"; then
    merge+=( "manifests/addons/no-haproxy.yml" )
    if want_feature "dynamic-web-ip" ; then
      merge+=( "manifests/addons/dynamic-web.yml" )
    fi  
  fi

  if want_feature "external-db"; then
    merge+=( "manifests/addons/external-db.yml" ) 
    if want_feature "external-db-ca"; then
      merge+=( "manifests/addons/external-db-ca.yml" )
    fi
  fi

  if want_feature "vault"; then
    merge+=( "manifests/addons/vault.yml" )
  fi

  if want_feature "vault-approle"; then
    if ! want_feature "vault"; then
      echo >&2 "Cannot use 'vault-approle' feature without 'vault' feature"
      exit 1
    fi
    merge+=( "manifests/addons/vault-approle.yml" )
  fi
  # If credhub support is added later it should probably if elsif'd here, under vault

  if want_feature "shout"; then
    merge+=( "manifests/addons/shout.yml" )
  fi

  if want_feature "prometheus"; then
    merge+=( "manifests/addons/prometheus.yml" )
  fi

elif want_feature "workers" ; then
  merge+=( "manifests/concourse/workers.yml" )

  for want in ${GENESIS_REQUESTED_FEATURES}; do
    case "$want" in
      provided-cert|self-signed-cert|github-oauth|github-enterprise-oauth|cf-oauth)
        describe >&2 "#Y{[WARNING]} $want feature has no effect on worker-only deployment, and will be ignored"
        ;;
    esac
  done

else
  echo >&2 "Concourse needs to be configured as 'full' or 'workers'.  If upgrading,"
  echo >&2 "please add 'full' to your environment's list of features"
  exit 1
fi

if want_feature "shield"; then
  echo >&2 "The 'shield' feature is no longer supported.  Instead, please add the"
  echo >&2 "shield agent to your runtime configuration."
fi

if want_feature "azure"; then
  echo >&2 "The 'azure' feature is no longer necessary - azure CPI will be detected"
  echo >&2 "automatically at deployment time."
fi

echo "${merge[@]}"
